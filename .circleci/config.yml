# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
commands:
  print_pipeline_id:
    description: "command that prints the pipelineId to the console."
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
jobs:
  myJob:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
  # save_hello_world_output:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run: echo "hello world" > ~/output.txt
  #     - persist_to_workspace:
  #         root: ~/
  #         paths:
  #           - output.txt

  # print_output_file:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - attach_workspace:
  #         at: ~/
  #     - run : cat ~/output.txt
  # print_hello:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run: echo hello
  # print_world:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run: echo world
  # build:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run:
  #           name: "echo an env var that is part of our project"
  #           command: |
  #             echo $MY_ENV_VAR

workflows:
  # Name the workflow "welcome"
  my_workflow:
    # Run the welcome/run job in its own container
    jobs:
      - myJob
      # - save_hello_world_output
      # - print_output_file:
      #     requires:
      #         - save_hello_world_output
      # - welcome/run
      # - print_hello
      # - print_world:
      #     requires:
      #         - print_hello
      # - build